method
method <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my['bo'])
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
print(r_al[['bo']])
method <- append(method, r_al[['bo']])
}
method
method <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my['bo'])
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
print(r_al[['bo']])
method <- append(method, r_al['bo'])
}
method
method <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my['bo'])
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
print(r_al[['bo']])
method <- append(method, r_al[,'bo'])
}
method
method <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,'bo']
print(r_my)
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,'bo']
print(r_al)
#method <- append(method, r_al[,'bo'])
}
method
method <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,]
print(r_my)
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,]
print(r_al)
#method <- append(method, r_al[,'bo'])
}
method <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my)
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,]
print(r_al)
#method <- append(method, r_al[,'bo'])
}
method <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my)
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
print(r_al)
#method <- append(method, r_al[,'bo'])
}
method <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my[,'bo'])
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
print(r_al)
#method <- append(method, r_al[,'bo'])
}
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(str(r_my[,'bo']))
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
print(r_al)
#method <- append(method, r_al[,'bo'])
}
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my[,'bo'])
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
print(r_al[,'bo'])
#method <- append(method, r_al[,'bo'])
}
method <- list()
app <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my[,'bo'])
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
print(r_al[,'bo'])
#method <- append(method, r_al[,'bo'])
app <- append(app, i)
}
app
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my[,'bo'])
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
print(r_al[,'bo'])
#method <- append(method, r_al[,'bo'])
app <- append(app, i)
}
app <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my[,'bo'])
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
print(levels(factor(r_al$bo)))
#method <- append(method, r_al[,'bo'])
app <- append(app, i)
}
method <- list()
app <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my[,'bo'])
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
#print(levels(factor(r_al$bo)))
method <- append(method, levels(factor(r_al$bo)))
app <- append(app, i)
}
method
app
method
method <- list()
app <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
print(r_my[,'bo'])
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
#print(levels(factor(r_al$bo)))
method <- append(method, levels(factor(r_al$bo)))
app <- append(app, i)
method <- append(method, levels(factor(r_my$bo)))
app <- append(app, i)
}
method
app
method <- list()
app <- list()
best <- list()
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 20,][1,]
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 20,][1,]
best <- append(best, levels(factor(r_al$best)))
method <- append(method, levels(factor(r_al$bo)))
app <- append(app, i)
best <- append(best, levels(factor(r_my$best)))
method <- append(method, levels(factor(r_my$bo)))
app <- append(app, i)
}
method
app
best
data.frame(method, app, best)
rbind(method, app, best)
cbind(method, app, best)
df<-cbind(method, app, best)
View(df)
df<-cbind(method, app, best)
df$best = as.numeric(as.character(df$best))
df[df['bo'] == 'bo1',]
df[df['bo'] == 'bo1',]
df[df['method'] == 'bo1',]
df<-cbind(method, app, best)
df$best = as.numeric(as.character(df$best))
df$method = as.character(df$method)
df[df['method'] == 'bo1',]
View(df)
View(df)
df<-cbind(method, app, best)
View(df)
df
df['method']
df['method',]
df$method
df
data.frame(df)
df<-cbind(method, app, best)
df$best = as.numeric(as.character(df$best))
df$method = as.character(df$method)
df <- data.frame(df)
df[df['method'] == 'bo1',]
data.frame(df)
df<-cbind(method, app, best)
df$best = as.numeric(as.character(df$best))
df$method = as.character(df$method)
df <- data.frame(df)
df
df
data.frame(df)
df
df<-cbind(method, app, best)
df
data.frame(df)
df<-data.frame(df)
df
df[df['method'] == 'bo1',]
df$best
mean(df$best)
sapply(df$best, mean, na.rm = T)
lapply(df$best, mean, na.rm = T)
numdata<-df[sapply(df$method, is.numeric)]
lapply(numdata, mean, na.rm = T)
df$best = as.numeric(as.character(df$best))
lapply(df$best, mean, na.rm = T)
sapply(df$best, mean, na.rm = T)
df
df <-df[df['method'] == 'bo1',]
df
mean(df$best)
sd(df$best)
mean(df$best)
sd(df$best)
df<-data.frame(df)
df<-cbind(method, app, best)
df$best = as.numeric(as.character(df$best))
df$method = as.character(df$method)
df<-data.frame(df)
df
df<-cbind(method, app, best)
df
df<-data.frame(df)
df
df_bo1 <-df[df['method'] == 'bo1',]
df_bo1 <-df[df['method'] == 'bo1',]
mean(df_bo1$best)
sd(df_bo1$best)
df
df_bo1 <-df[df['method'] == 'bo1',]
View(df_bo1)
df<-cbind(method, app, best)
df <- data.frame(df)
df$best = as.numeric(as.character(df$best))
df
df_bo1 <-df[df['method'] == 'bo1',]
mean(df_bo1$best)
sd(df_bo1$best)
df_bo4 <-df[df['method'] == 'bo4',]
mean(df_bo4$best)
sd(df_bo4$best)
t.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "two.sided")
n = 1000000 # set the sample size
p = runif(n) # randomly select n values of p
y = qnorm(p) # give n standard normal quantiles
hist(y)
hist(df$best)
y = qnorm(p) # give n standard normal quantiles
hist(y)
hist(df_bo4$best)
hist(df_bo1$best)
hist(df_bo4$best)
hist(df_bo1$best)
hist(df_bo4$best)
hist(df_bo1$best)
hist(df_bo4$best)
hist(df_bo1$best)
ggplot(df, aes(x=method, y=best)) +
geom_violin()
ggplot(df, aes(x=best, y=method)) +
geom_violin()
View(df)
ggplot(df, aes(x=method, y=best)) +
geom_violin()
df
df$best = as.numeric(as.character(df$best))
ggplot(df, aes(x=method, y=best)) +
geom_violin()
boxplot(df$best)
boxplot(df_bo1$best)
boxplot(df_bo4$best)
wilcox.test(df_bo1$best, df_bo4$best, , paired = TRUE, alternative = "two.sided")
wilcox.test(df_bo1$best, df_bo4$best, , paired = TRUE, alternative = "one.sided")
wilcox.test(df_bo1$best, df_bo4$best, , paired = TRUE, alternative = "less")
wilcox.test(df_bo1$best, df_bo4$best, , paired = TRUE, alternative = "less", conf.int = TRUE)
wilcox.test(df_bo1$best, df_bo4$best, , paired = TRUE, alternative = "less", conf.int = FALSE)
wilcox.test(df_bo1$best, df_bo4$best, , paired = TRUE, alternative = "greater", conf.int = FALSE)
t.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "two.sided")
hist(df_bo1)
hist(df_bo1$best)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "less", conf.int = FALSE)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "greater", conf.int = FALSE)
ggplot(df, aes(x = method,fill = best)) +
geom_histogram(color = "black", binwidth = 50)
ggplot(df, aes(x = method, y = best)) +
geom_histogram(color = "black", binwidth = 50)
ggplot(df, aes(x = method, y = best))
ggplot(df, aes(x = method, fill = best))
ggplot(df)
ggplot(df)+
geom_histogram
ggplot(df)+
geom_histogram()
ggplot(df, axes(x=method))+
geom_histogram()
ggplot(df, axes(x=method.y=best))+
geom_histogram()
ggplot(df, axes(x=method.y=best,fill=method))+
geom_histogram()
ggplot(df) +
geom_bar(aes(x = method, y = best, fill = method), stat = "identity")
ggplot(df) +
geom_bar(aes(x = method, y = best, fill = best), stat = "identity")
df$best = as.numeric(as.character(df$best))
ggplot(df) +
geom_bar(aes(x = method, y = best, fill = best), stat = "identity")
ggplot(df) +
geom_bar(aes(x = method, y = best))
df
ggplot(df, aes(x = best,fill = method)) +
geom_histogram(color = "black", binwidth = 50)
ggplot(df, aes(x = best,fill = method)) +
geom_histogram()
ggplot(df, aes(x = best,fill = method)) +
geom_histogram(color = "black", binwidth = 30)
ggplot(df, aes(x = best,fill = method)) +
geom_histogram()
ggplot(df, aes(x = best,fill = method)) +
geom_histogram()+
facet_grid(Local ~ .) +
labs(y = 'Frequência') +
scale_fill_manual(values=c("#0f8bf7", "#f7830f", "#ff12d0", "#2a8008"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), legend.position = 'top',
axis.line = element_line(colour = "black"))
ggplot(df, aes(x = best,fill = method)) +
geom_histogram()+
facet_grid(method ~ .) +
labs(y = 'Frequência') +
scale_fill_manual(values=c("#0f8bf7", "#f7830f", "#ff12d0", "#2a8008"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), legend.position = 'top',
axis.line = element_line(colour = "black"))
ggplot(df, aes(x = best,fill = method)) +
geom_histogram()+
facet_grid(method ~ .) +
labs(y = 'Frequência') +
scale_fill_manual(values=c("#0f8bf7", "#f7830f", "#ff12d0", "#2a8008"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), legend.position = 'top',
axis.line = element_line(colour = "black"))
ggplot(df, aes(x = best,fill = method)) +
geom_histogram()+
facet_grid(method ~ .) +
labs(y = 'Frequência') +
scale_fill_manual(values=c("#0f8bf7", "#f7830f"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), legend.position = 'top',
axis.line = element_line(colour = "black"))
ggplot(df, aes(x = best,fill = method)) +
geom_histogram()+
facet_grid(method ~ .)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
ggviolin (macacos, x = "method", y = "best", fill = "method",
palette = c("#0f8bf7", "#f7830f", "#ff12d0", "#2a8008"),
order = c("Baixa Grande","Pedra Furada", "Recife", "Teresina"),
add = "boxplot", add.params = list(fill = "white"),
ylab = "Níveis de cortisol", xlab = "Locais de estudo")
library(ggpubr)
library(ggpubr)
ggviolin (macacos, x = "method", y = "best", fill = "method",
palette = c("#0f8bf7", "#f7830f", "#ff12d0", "#2a8008"),
order = c("bo1","bo2"),
add = "boxplot", add.params = list(fill = "white"),
ylab = "Níveis de cortisol", xlab = "Locais de estudo")
ggviolin(df, x = "method", y = "best", fill = "method",
palette = c("#0f8bf7", "#f7830f", "#ff12d0", "#2a8008"),
order = c("bo1","bo2"),
add = "boxplot", add.params = list(fill = "white"),
ylab = "Níveis de cortisol", xlab = "Locais de estudo")
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "greater", conf.int = FALSE)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "greater", conf.int = TRUE)
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == 5,][1,]
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == 5,][1,]
best <- append(best, levels(factor(r_al$best)))
method <- append(method, levels(factor(r_al$bo)))
app <- append(app, i)
best <- append(best, levels(factor(r_my$best)))
method <- append(method, levels(factor(r_my$bo)))
app <- append(app, i)
}
df<-cbind(method, app, best)
df <- data.frame(df)
df$best = as.numeric(as.character(df$best))
df
df_bo1 <-df[df['method'] == 'bo1',]
mean(df_bo1$best)
sd(df_bo1$best)
df_bo4 <-df[df['method'] == 'bo4',]
mean(df_bo4$best)
sd(df_bo4$best)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "greater", conf.int = TRUE)
my_ite <- 10
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == my_ite,][1,]
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == my_ite,][1,]
best <- append(best, levels(factor(r_al$best)))
method <- append(method, levels(factor(r_al$bo)))
app <- append(app, i)
best <- append(best, levels(factor(r_my$best)))
method <- append(method, levels(factor(r_my$bo)))
app <- append(app, i)
}
method
app
best
df<-cbind(method, app, best)
df <- data.frame(df)
df$best = as.numeric(as.character(df$best))
df
df_bo1 <-df[df['method'] == 'bo1',]
mean(df_bo1$best)
sd(df_bo1$best)
df_bo4 <-df[df['method'] == 'bo4',]
mean(df_bo4$best)
sd(df_bo4$best)
hist(df_bo4$best)
hist(df_bo1$best)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "greater", conf.int = TRUE)
boxplot(df_bo1$best, df_bo4$best)
seed <- 2
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == my_ite,][seed,]
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == my_ite,][seed,]
best <- append(best, levels(factor(r_al$best)))
method <- append(method, levels(factor(r_al$bo)))
app <- append(app, i)
best <- append(best, levels(factor(r_my$best)))
method <- append(method, levels(factor(r_my$bo)))
app <- append(app, i)
}
df<-cbind(method, app, best)
df <- data.frame(df)
df$best = as.numeric(as.character(df$best))
df
df_bo1 <-df[df['method'] == 'bo1',]
mean(df_bo1$best)
sd(df_bo1$best)
df_bo4 <-df[df['method'] == 'bo4',]
mean(df_bo4$best)
sd(df_bo4$best)
hist(df_bo1$best)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "greater", conf.int = TRUE)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "less", conf.int = TRUE)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "greater", conf.int = TRUE)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "greater", conf.int = TRUE, conf.level = 0x99)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "greater", conf.int = TRUE, conf.level = 0.99)
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "greater", conf.int = TRUE, conf.level = 0.99, exact=F)
df_bo1$best-df_bo4$best
df_bo1
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == my_ite,][seed,]
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == my_ite,][seed,]
best <- append(best, levels(factor(r_al$best)))
method <- append(method, levels(factor(r_al$bo)))
app <- append(app, i)
best <- append(best, levels(factor(r_my$best)))
method <- append(method, levels(factor(r_my$bo)))
app <- append(app, i)
}
method
app
best
df<-cbind(method, app, best)
df <- data.frame(df)
df$best = as.numeric(as.character(df$best))
df
df_bo1 <-df[df['method'] == 'bo1',]
View(df_bo1)
method <- list()
app <- list()
best <- list()
my_ite <- 10
seed <- 2
for(i in levels(factor(data_new$name))) {
r_my <- data[data['name'] == i & data['bo'] == 'bo4' & data['target'] == 2 & data['ite'] == my_ite,][seed,]
r_al <- data[data['name'] == i & data['bo'] == 'bo1' & data['ite'] == my_ite,][seed,]
best <- append(best, levels(factor(r_al$best)))
method <- append(method, levels(factor(r_al$bo)))
app <- append(app, i)
best <- append(best, levels(factor(r_my$best)))
method <- append(method, levels(factor(r_my$bo)))
app <- append(app, i)
}
method
app
best
df<-cbind(method, app, best)
df <- data.frame(df)
df$best = as.numeric(as.character(df$best))
df
df_bo1 <-df[df['method'] == 'bo1',]
mean(df_bo1$best)
sd(df_bo1$best)
df_bo4 <-df[df['method'] == 'bo4',]
mean(df_bo4$best)
sd(df_bo4$best)
df_bo1
wilcox.test(df_bo1$best, df_bo4$best, paired = TRUE, alternative = "greater", conf.int = TRUE, conf.level = 0.99, exact=F)
hist(df_bo1$best)
hist(df_bo4$best)
df %>% get_summary_stats(bo1, bo4, dif, type = "median_iqr")
install.packages("rstatix")
library(rstatix)
install.packages("rstatix", repos = "https://cloud.r-project.org")
library(rstatix)
